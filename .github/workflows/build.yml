name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 当推送v开头的tag时触发
  workflow_dispatch:  # 添加手动触发支持
    inputs:
      version:
        description: '版本号 (例如: v0.2.1)'
        required: true
        default: 'v0.2.1'
      prerelease:
        description: '是否为预发布版本'
        type: boolean
        required: false
        default: false

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller flask pywebview PyPDF2 pycryptodome pywin32 requests pillow
    
    - name: Build with PyInstaller
      shell: cmd
      run: |
        pyinstaller --onefile --add-data "templates;templates" --hidden-import flask --hidden-import webview --hidden-import win32api --hidden-import win32con --exclude-module setuptools --exclude-module pkg_resources --exclude-module _bootlocale --noconsole --name "PDF空白页添加工具" run.py
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version || github.ref }}
        release_name: Release ${{ github.event.inputs.version || github.ref }}
        draft: false
        prerelease: ${{ github.event.inputs.prerelease || false }}
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/PDF空白页添加工具.exe
        asset_name: PDF空白页添加工具.exe
        asset_content_type: application/octet-stream 
